name: Create Pull Request Delta Container

on:
  pull_request:
    # The events are that a PR is opened, or when a commit is pushed
    # to a branch that has an existing pull request
    types: [opened, synchronize]
    # The branches filter allows to specify that this workflow should only
    # run if the branch name is "develop". This way we prevent this workflow
    # from running when PRs are opened on other branches
    branches: [master, dev, develop]
    # We only care about changes to the force-app directory, which is the
    # root directory of the sfdx project. This prevents the job from running
    # when changing non-salesforce files (like this yml file).
    paths:
      - 'force-app/**'
env:
  PLCH_ACCOUNT_FILTER: ${{ vars.PLCH_ACCOUNT_FILTER }}

jobs:
  Create-Pull-Request:
    runs-on: ubuntu-latest
    environment: ${{ github.base_ref == 'master' && 'PROD' || 'DEV' }}
    steps:          
      # Setup Node
      - uses: actions/setup-node@v1
        with:
          node-version: '>=20'
          check-latest: true

      # - name: Install actions
      #   run: |
      #     npm install --global --save @actions/core
      #     npm install --global --save @actions/glob

      # Install SFDX
      - name: Install Salesforce CLI
        run: |
          wget https://developer.salesforce.com/media/salesforce-cli/sfdx/channels/stable/sfdx-linux-x64.tar.xz
          mkdir ~/sfdx
          tar xJf sfdx-linux-x64.tar.xz -C ~/sfdx --strip-components 1
          echo "$HOME/sfdx/bin" >> $GITHUB_PATH
          ~/sfdx/bin/sfdx version

      - name: Install sfdx-git-delta
        run: |
          echo y | sf plugins install sfdx-git-delta
          sf plugins

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: |
          git checkout ${{ github.head_ref }}
          git checkout ${{ github.base_ref }}

      # - name: Load .env file
      #   uses: xom9ikk/dotenv@v2
      #   with:
      #     path: ./force-app/main/env

      # Authenticate with JWT
      - name: Authenticate JWT
        run: |
          echo "${{ secrets.SERVER_KEY }}" > SERVER_KEY.key
          sf org login jwt --client-id ${{ vars.CLIENT_ID }} --jwt-key-file SERVER_KEY.key --username ${{ vars.USERNAME }} --set-default

      # We use SFDX Git Delta to create a directory with only the metadata that has changed.
      # this allows us to deploy only those changes, as opposed to deploying the entire branch.
      # This helps reducing deployment times
      - name: 'Create delta packages for new, modified or deleted metadata'
        run: |
          mkdir ./devops/changed-sources
          sf sgd source delta --to ${{ github.base_ref }} --from ${{ github.head_ref }} --output ./devops/changed-sources/ --generate-delta --source force-app/

      - name: 'LS'
        run: |
          find ./devops/changed-sources

      - name: Calculate test class to run
        run: |
          npm install --global --save @actions/core
          npm install --global --save @actions/glob
          node ./devops/parsePR.js
          
      # - name: Calculate test class to run
      #   env:
      #     TESTCLASSVALUE: ${{ inputs.testLevel == 'RunSpecifiedTests' }}
      #   run: |
      #     echo "TESTCLASSVALUE - $TESTCLASSVALUE"
      #     if $TESTCLASSVALUE;
      #     then
      #       echo " --tests "${{ inputs.testClassToRun }}" "
      #       echo "testClass=--tests "${{ inputs.testClassToRun }}" " >> $GITHUB_ENV
      #       echo "$TESTCLASSVALUE - specific classes to run"
      #     else
      #       echo "testClass=" >> $GITHUB_ENV
      #       echo "$TESTCLASSVALUE - no specific classes to run"
      #     fi

      #- name: checkout branch
      #  run: git checkout ${{ inputs.from }}

      # - name: 'Scan code'
      #   run: |
      #     cd devops/changed-sources
      #     sf scanner:run --format sarif --target './**/*.cls' --category "Design,Best Practices,Performance" --outfile 'apexScanResults.sarif'  
      #     cd ..

      - name: Validate
        if: ${{ success() }}
        run: sf project deploy start --dry-run -x ./devops/changed-sources/package/package.xml --test-level NoTestRun ${{ env.testClass }} --concise

      # - name: Automatically open pull request
      #   if: ${{ success() }}
      #   uses: devops-infra/action-pull-request@v0.5.5
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     source_branch: ${{ github.head_ref }}
      #     target_branch: ${{ github.base_ref }}
      #     title: 'AUTOM-${{ github.head_ref }}-${{ github.base_ref }}'
      #     template: ''
      #     body: |
      #       **Automated pull request**
      #       TEST CLASSES: 1
      #     reviewer: ''
      #     assignee: ''
      #     label: ''
      #     milestone: ''
      #     old_string: '<!-- Add your description here -->'
      #     new_string: '** Automatic pull request**'
      #     get_diff: true
      #     ignore_users: 'dependabot'
      #     allow_no_diff: false
