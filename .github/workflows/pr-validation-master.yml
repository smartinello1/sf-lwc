# Workflow to validate a pr into master branch
name: pr-validation-master

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  pull_request:
    branches: [master]
    paths:
      - 'force-app/**'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout to master
        uses: actions/checkout@v3
        with:
          ref: master
      - name: Checkout to dev
        uses: actions/checkout@v3
        with:
          ref: dev
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      # Node.js
      - uses: actions/setup-node@v1
        with:
          node-version: '>=14'
          check-latest: true

      - name: Install Salesforce CLI
        run: |
          wget https://developer.salesforce.com/media/salesforce-cli/sfdx/channels/stable/sfdx-linux-x64.tar.xz
          mkdir ~/sfdx
          tar xJf sfdx-linux-x64.tar.xz -C ~/sfdx --strip-components 1
          echo "$HOME/sfdx/bin" >> $GITHUB_PATH
          ~/sfdx/bin/sfdx version

      - name: Install sfpowerkit
        run: echo 'y' | npx sfdx plugins:install sfpowerkit

      - name: 'Populate auth file with SFDX_URL secret'
        shell: bash
        run: 'echo ${{ secrets.SFDX_SECRETKEY }} > SFDX_QA'

      - name: 'Authenticate against dev hub'
        run: sfdx force:auth:sfdxurl:store -f SFDX_QA -s -a MyDev

      # install SFDX-Git-Delta plugin - https://github.com/scolladon/sfdx-git-delta
      - name: 'Installing sfdx git delta'
        run: |
          echo y | sfdx plugins:install sfdx-git-delta
          sfdx plugins

      - name: Create delta
        run: |
          mkdir incremental
          sfdx sgd:source:delta -W --output incremental/ --to origin/dev --from origin/master -s force-app/**

      # - name: Create code artifact backup
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: code-artifact-backup
      #     path: force-app/main/default

      - name: Create incremental package
        uses: actions/upload-artifact@v3
        with:
          name: code-artifact
          path: incremental

      - uses: actions/download-artifact@v3
        with:
          name: code-artifact
          path: code-artifact

      - name: Validate
        if: ${{ success() }}
        run: sfdx force:source:deploy -x ./incremental/package/package.xml --postdestructivechanges ./incremental/destructiveChanges/destructiveChanges.xml -c -l RunLocalTests -u MyDev --json --loglevel fatal

      - name: Checkout to master
        # if: ${{ success() }}
        uses: actions/checkout@v3
        with:
          ref: master

      - name: Create code artifact backup prod
        uses: actions/upload-artifact@v3
        with:
          name: code-artifact-backup-prod
          path: force-app/main/default

      - uses: ncipollo/release-action@v1
        with:
          artifacts: code-artifact-backup-prod
