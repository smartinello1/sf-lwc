name: Deploy

on: 
  push:
    branches: [ master ]
    paths:
      - 'force-app/**'
    
jobs: 
  Deploy-Last-Diff:
    runs-on: ubuntu-latest
    environment: ${{ github.base_ref == 'master' && 'PROD' || 'DEV' }}
    steps:
      # Setup Node
      - uses: actions/setup-node@v1
        with:
          node-version: '>=20'
          check-latest: true

      # Install SFDX
      - name: Install Salesforce CLI
        run: |
          wget https://developer.salesforce.com/media/salesforce-cli/sfdx/channels/stable/sfdx-linux-x64.tar.xz
          mkdir ~/sfdx
          tar xJf sfdx-linux-x64.tar.xz -C ~/sfdx --strip-components 1
          echo "$HOME/sfdx/bin" >> $GITHUB_PATH
          ~/sfdx/bin/sfdx version

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: |
          git checkout ${{ github.ref }}

      - name: Load .env file
        uses: xom9ikk/dotenv@v2
        with:
          path: ./force-app/main/env

      # Authenticate with JWT
      - name: Authenticate JWT
        run: |
          echo "${{ secrets.SERVER_KEY }}" > SERVER_KEY.key
          sf org login jwt --client-id ${{ vars.CLIENT_ID }} --jwt-key-file SERVER_KEY.key --username ${{ vars.USERNAME }} --set-default
    
      - name: Install sfdx-git-delta
        run: |
          echo y | sf plugins install sfdx-git-delta
          sf plugins

      # We use SFDX Git Delta to create a directory with only the metadata that has changed.
      # this allows us to deploy only those changes, as opposed to deploying the entire branch.
      # This helps reducing deployment times
      - name: 'Create delta packages for new, modified or deleted metadata'
        run: |
          mkdir ./devops/changed-sources
          sf sgd source delta --to "HEAD" --from "HEAD~1" --output ./devops/changed-sources/ --generate-delta --source force-app/

      - name: 'LS'
        run: |
          find ./devops/changed-sources

      - name: Validate
        if: ${{ success() }}
        run: sf project deploy start -x ./devops/changed-sources/package/package.xml --test-level NoTestRun ${{ env.testClass }} --concise


